#!/bin/bash
# zf220330.0918
#
# This is a wrapper around ansible / ansible-playbook.
#
# Usage ("ansible" mode):
#
#   ./ofrfsible
#
# Usage ("ansible-playbook" mode):
#
#   ./ofrfsible -l prod
#
#
# If you are unfamiliar with Ansible, read up on it at
# - https://www.ansible.com/overview/how-ansible-works
# - https://github.com/jdauphant/awesome-ansible

cd "$(dirname "$0")"; cd "$(/bin/pwd)"

ensure_suitcase () {
    if ! test -f ansible-deps-cache/.versions 2>/dev/null; then
      curl https://raw.githubusercontent.com/epfl-si/ansible.suitcase/master/install.sh | \
            SUITCASE_ANSIBLE_VERSION=10.3.0 \
            SUITCASE_DIR=$PWD/ansible-deps-cache \
            SUITCASE_PIP_EXTRA="bcrypt passlib kubernetes docker" \
            SUITCASE_ANSIBLE_REQUIREMENTS=requirements.yml \
            SUITCASE_NO_EYAML=1 \
            SUITCASE_PYTHON_VERSIONS="3.8.5 3.8.2 3.8.9 3.9.7" \
            SUITCASE_NO_KEYBASE=1 \
            SUITCASE_WITH_HELM=1 \
            bash -x
    fi
    export PATH="$PWD/ansible-deps-cache/bin:$PATH"
    export ANSIBLE_ROLES_PATH="$PWD/ansible-deps-cache/roles"
    export ANSIBLE_COLLECTIONS_PATHS="$PWD/ansible-deps-cache"
    . "$PWD"/ansible-deps-cache/lib.sh
}

do_login_oc () {
    local cluster_url=$1

    if ! oc whoami --show-server | grep -q "$cluster_url"; then
        echo "Logging into OpenShift cluster at $cluster_url..."
        if ! oc login "$cluster_url" --web; then
            echo "Login failed. Exiting."
            exit 1
        fi
    else
        echo "Already logged into $cluster_url."
    fi
}


###########################################################################

ensure_suitcase


playbook_flags="$playbook_flags -e @vars/global_vars.yml -e git_current_branch=$git_current_branch"

inventory_mode="dev"
infra="vm"
cluster_url="https://api.ocpitst0001.xaas.epfl.ch:6443"

mode=ansible-playbook

declare -a ansible_args
ansible_args=(-e "startsible_dir=$OLDPWD")

while [ "$#" -gt 0 ]; do
  case "$1" in
        --vm)
            infra="vm"
            shift ;;   
        --k8s)
            infra="k8s"
            shift ;;    
        --dev)
            inventory_mode="dev"
            cluster_url=""
            shift ;;
        --test)
            inventory_mode="test"
            cluster_url="https://api.ocpitst0001.xaas.epfl.ch:6443"
            shift ;;
        --prod)
            inventory_mode="prod"
            cluster_url="https://api.ocpitsp0001.xaas.epfl.ch:6443"
            shift ;;
        -m) mode=ansible
            ansible_args+=("-m")
            shift ;;
        *)
            ansible_args+=("$1")
            shift ;;
    esac
done


if [[ $infra == "k8s" ]]; then
    if [[ $cluster_url == "" ]]; then
        echo "No cluster $inventory_mode for $infra."
        exit 1
    else
        do_login_oc "$cluster_url"
    fi
fi


inventories () {
    echo "-i inventory/$infra-$inventory_mode.yml"
}

# https://github.com/ansible/ansible/issues/32499, https://bugs.python.org/issue35219
case "$(uname -s)" in
    Darwin) export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES ;;
esac

set -e

case "$mode" in
    ansible-playbook)
        ansible-playbook $playbook_flags $(inventories) \
                         "${ansible_args[@]}" \
                         $ansible_flags \
                         playbook.yml
        ;;
    ansible)
        ansible $(inventories) $ansible_flags "${ansible_args[@]}"
        ;;
esac
