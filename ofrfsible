#!/bin/bash
# zf220330.0918
#
# This is a wrapper around ansible / ansible-playbook.
#
# Usage ("ansible" mode):
#
#   ./ofrfsible
#
# Usage ("ansible-playbook" mode):
#
#   ./ofrfsible -l prod
#
#
# If you are unfamiliar with Ansible, read up on it at
# - https://www.ansible.com/overview/how-ansible-works
# - https://github.com/jdauphant/awesome-ansible

cd "$(dirname "$0")"; cd "$(/bin/pwd)"

platform_check () {
    if ! test -f ansible-deps-cache/.versions 2>/dev/null; then
      curl https://raw.githubusercontent.com/epfl-si/ansible.suitcase/master/install.sh | \
            SUITCASE_ANSIBLE_VERSION=6.3.0 \
            SUITCASE_DIR=$PWD/ansible-deps-cache \
            SUITCASE_PIP_EXTRA="bcrypt passlib kubernetes docker" \
            SUITCASE_ANSIBLE_REQUIREMENTS=requirements.yml \
            SUITCASE_NO_EYAML=1 \
            SUITCASE_PYTHON_VERSIONS="3.8.5 3.8.2 3.8.9 3.9.7" \
            SUITCASE_NO_KEYBASE=1 \
            SUITCASE_WITH_HELM=1 \
            bash -x
    fi
    export PATH="$PWD/ansible-deps-cache/bin:$PATH"
    export ANSIBLE_ROLES_PATH="$PWD/ansible-deps-cache/roles"
    export ANSIBLE_COLLECTIONS_PATHS="$PWD/ansible-deps-cache"
    . "$PWD"/ansible-deps-cache/lib.sh
#    oc_check
}

# oc_check () {
#   if ! oc projects >/dev/null 2>&1; then
#     echo "Please login to openshift:"
#     oc login
#   fi
# }


###########################################################################

platform_check
ensure_tkgi svc0056mprntkd0001 tkgi.epfl.ch ./tkgi-EPFL-CA.crt
playbook_flags="$playbook_flags -e @vars/global_vars.yml -e git_current_branch=$git_current_branch"

inventory_mode="test"
infra="vm"

mode=ansible-playbook

declare -a ansible_args
ansible_args=(-e "startsible_dir=$OLDPWD")

while [ "$#" -gt 0 ]; do
  case "$1" in
        --k8s)
            infra="k8s"
            shift ;;
        --dev)
            inventory_mode="dev"
            shift ;;
        --prod)
            inventory_mode="prod"
            shift ;;
        -m) mode=ansible
            ansible_args+=("-m")
            shift ;;
        *)
            ansible_args+=("$1")
            shift ;;
    esac
done


inventories () {
    echo "-i inventory/$infra-$inventory_mode.yml"
}

# https://github.com/ansible/ansible/issues/32499, https://bugs.python.org/issue35219
case "$(uname -s)" in
    Darwin) export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES ;;
esac

set -e

case "$mode" in
    ansible-playbook)
        ansible-playbook $playbook_flags $(inventories) \
                         "${ansible_args[@]}" \
                         $ansible_flags \
                         playbook.yml
        ;;
    ansible)
        ansible $(inventories) $ansible_flags "${ansible_args[@]}"
        ;;
esac
