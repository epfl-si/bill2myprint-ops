# Manage secrets.json

- name: secrets.json exists ?
  ansible.builtin.shell:
    cmd: docker exec -it bill2myprint-app sh -c "test -e /app/secrets.json && echo 'It exists'"
  failed_when: false
  changed_when: false
  register: _secrets_json


- name: create secrets.json if it doesnt exist
  ansible.builtin.file:
    path: /app/ofrf/secrets.json
    state: touch
    mode: '0755'
  when: _secrets_json.stdout.find('It exists') == -1


- name: Put data in secrets.json since the current is not updated
  ansible.builtin.shell: |
    cat <<EOF >> /app/ofrf/secrets.json
    {
        "SECRET_KEY": "{{ _ofrf_secrets["SECRET_KEY"] }}",
        "OUR_DB_HOST": "{{ _ofrf_secrets["OUR_DB_HOST"] }}",
        "OUR_DB_NAME": "{{ _ofrf_secrets["OUR_DB_NAME"] }}",
        "OUR_DB_PORT": "{{ _ofrf_secrets["OUR_DB_PORT"] }}",
        "OUR_DB_USER": "{{ _ofrf_secrets["OUR_DB_USER"] }}",
        "OUR_DB_PASSWORD": "{{ _ofrf_secrets["OUR_DB_PASSWORD"] }}",

        "MYPRINT_DB_HOST": "{{ _ofrf_secrets["MYPRINT_DB_HOST"] }}",
        "MYPRINT_DB_NAME": "{{ _ofrf_secrets["MYPRINT_DB_NAME"] }}",
        "MYPRINT_DB_PORT": "{{ _ofrf_secrets["MYPRINT_DB_PORT"] }}",
        "MYPRINT_DB_USER": "{{ _ofrf_secrets["MYPRINT_DB_USER"] }}",
        "MYPRINT_DB_PASSWORD": "{{ _ofrf_secrets["MYPRINT_DB_PASSWORD"] }}",

        "CADI_DB_HOST": "{{ _ofrf_secrets["CADI_DB_HOST"] }}",
        "CADI_DB_NAME": "{{ _ofrf_secrets["CADI_DB_NAME"] }}",
        "CADI_DB_PORT": "{{ _ofrf_secrets["CADI_DB_PORT"] }}",
        "CADI_DB_USER": "{{ _ofrf_secrets["CADI_DB_USER"] }}",
        "CADI_DB_PASSWORD": "{{ _ofrf_secrets["CADI_DB_PASSWORD"] }}"
    }
    EOF
  when: _secrets_json.stdout.find('It exists') == -1


- name: Replace secrets.json in docker by the new one
  ansible.builtin.shell:
    cmd: docker cp /app/ofrf/secrets.json bill2myprint-app:/app/secrets.json
  when: _secrets_json.stdout.find('It exists') == -1
