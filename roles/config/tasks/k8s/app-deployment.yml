- name: Create app/deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ofrf-app
        namespace: "{{ openshift_namespace }}"
        labels:
          app: ofrf
      spec:
        replicas: 1
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 1
        selector:
          matchLabels:
            app: ofrf
        template:
          metadata:
            labels:
              app: ofrf
          spec:
            serviceAccountName: ofrf-service-account
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        app: ofrf
                    topologyKey: kubernetes.io/hostname
            containers:
              - name: app
                image: "{{ quay_host }}/{{ quay_repo_name }}/{{ app_name }}"
                imagePullPolicy: "Always"
                ports:
                  - containerPort: 8000
                    name: django-port
                env:
                  - name: SECRET_KEY
                    value: "{{ _ofrf_secrets.SECRET_KEY }}"
                  - name: DJANGO_SETTINGS_MODULE
                    value: "config.settings.k8s-{{ RUNENV }}"
                  - name: OFRF_SITE_DOMAIN
                    value: "{{ ofrf_site_domain }}"
                  - name: OFRF_SITE_ID
                    value: "{{ ofrf_site_id | string }}"  
                  - name: DEBUG_MODE
                    value: "false"
                  - name: OFRF_DATABASE_HOST
                    value: "{{ _ofrf_secrets.OFRF_DB_HOST }}"
                  - name: OFRF_DATABASE_PORT
                    value: "{{ _ofrf_secrets.OFRF_DB_PORT }}"
                  - name: OFRF_DATABASE_NAME
                    value: "{{ _ofrf_secrets.OFRF_DB_NAME }}"
                  - name: OFRF_DATABASE_USER
                    value: "{{ _ofrf_secrets.OFRF_DB_USER }}"
                  - name: OFRF_DATABASE_PASSWORD
                    value: "{{ _ofrf_secrets.OFRF_DB_PASSWORD }}"
                  - name: MYPRINT_DATABASE_HOST
                    value: "{{ _ofrf_secrets.MYPRINT_DB_HOST }}"
                  - name: MYPRINT_DATABASE_PORT
                    value: "{{ _ofrf_secrets.MYPRINT_DB_PORT }}"
                  - name: MYPRINT_DATABASE_NAME
                    value: "{{ _ofrf_secrets.MYPRINT_DB_NAME }}"
                  - name: MYPRINT_DATABASE_USER
                    value: "{{ _ofrf_secrets.MYPRINT_DB_USER }}"
                  - name: MYPRINT_DATABASE_PASSWORD
                    value: "{{ _ofrf_secrets.MYPRINT_DB_PASSWORD }}"
                  - name: CADI_DATABASE_HOST
                    value: "{{ _ofrf_secrets.CADI_DB_HOST }}"
                  - name: CADI_DATABASE_PORT
                    value: "{{ _ofrf_secrets.CADI_DB_PORT }}"
                  - name: CADI_DATABASE_NAME
                    value: "{{ _ofrf_secrets.CADI_DB_NAME }}"
                  - name: CADI_DATABASE_USER
                    value: "{{ _ofrf_secrets.CADI_DB_USER }}"
                  - name: CADI_DATABASE_PASSWORD
                    value: "{{ _ofrf_secrets.CADI_DB_PASSWORD }}"
                  - name: OIDC_TENANT_ID
                    value: "{{ _ofrf_secrets.OIDC_TENANT_ID }}"
                  - name: OIDC_RP_CLIENT_ID
                    value: "{{ _ofrf_secrets.OIDC_RP_CLIENT_ID }}"
                  - name: OIDC_RP_CLIENT_SECRET
                    value: "{{ _ofrf_secrets.OIDC_RP_CLIENT_SECRET }}"
                resources:
                  requests:
                    cpu: "10m"
                    memory: "196Mi"
                  limits:
                    memory: "196Mi"
                readinessProbe:
                  tcpSocket:
                    port: 8000
                  initialDelaySeconds: 15
                  timeoutSeconds: 10
                  periodSeconds: 20
                  successThreshold: 1
                  failureThreshold: 2
                livenessProbe:
                  tcpSocket:
                    port: 8000
                  initialDelaySeconds: 15
                  timeoutSeconds: 10
                  periodSeconds: 20
                  successThreshold: 1
                  failureThreshold: 2
                volumeMounts:
                  - name: ofrf-static-files-volume
                    mountPath: /static
                    subPath: static
                    readOnly: false
            volumes:
              - name: ofrf-static-files-volume
                persistentVolumeClaim:
                  claimName: ofrf-pvc
