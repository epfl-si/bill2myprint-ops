## Manage /etc/odbc.ini

- name: odbc.ini exists ?
  ansible.builtin.shell:
    cmd: docker exec -it bill2myprint-app sh -c "test -d /etc/odbc.ini && echo 'It exists'"
  failed_when: false
  changed_when: false
  register: _odbc_in_docker_exists


- name: copy odbc.ini if exists
  ansible.builtin.shell:
    cmd: docker cp bill2myprint-app:/etc/odbc.ini .
  when: _odbc_in_docker_exists.stdout.find('It exists') != -1


- name: Open odbc.ini file
  shell: cat ./odbc.ini
  failed_when: false
  changed_when: false
  register: _odbc_freetds


- debug:
    var: _odbc_freetds.stdout


- name: Search if "[FreeTDS]" is already in file
  debug: msg="[FreeTDS] exists"
  when: _odbc_freetds.stdout.find('[FreeTDS]') != -1


- name: Add FreeTDS config into odbc.ini if "[FreeTDS]" is not in file
  ansible.builtin.shell: |
    cat <<EOF >> ./odbc.ini
    [FreeTDS]
    Description=FreeTDS Driver
    Driver=/usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so
    Setup=/usr/lib/x86_64-linux-gnu/odbc/libtdsS.so
    CPTimeout=
    CPReuse=
    EOF
  when: _odbc_freetds.stdout.find('[FreeTDS]') == -1


- name: copy odbc.ini if exists
  ansible.builtin.shell:
    cmd: docker cp ./odbc.ini bill2myprint-app:/etc/odbc.ini
  when: _odbc_freetds.stdout.find('[FreeTDS]') == -1


## Manage /etc/odbcinst.ini

- name: odbcinst.ini exists ?
  ansible.builtin.shell:
    cmd: docker exec -it bill2myprint-app sh -c "test -d /etc/odbcinst.ini && echo 'It exists'"
  failed_when: false
  changed_when: false
  register: _odbcinst_in_docker_exists


- name: copy odbcinst.ini if exists
  ansible.builtin.shell:
    cmd: docker cp bill2myprint-app:/etc/odbcinst.ini .
  when: _odbcinst_in_docker_exists.stdout.find('It exists') != -1


- name: Open odbcinst.ini file
  shell: cat ./odbcinst.ini
  failed_when: false
  changed_when: false
  register: _odbcinst_freetds


- debug:
    var: _odbcinst_freetds.stdout


- name: Search if "[FreeTDS]" is already in file
  debug: msg="[FreeTDS] exists"
  when: _odbcinst_freetds.stdout.find('[FreeTDS]') != -1


- name: Add FreeTDS config into odbcinst.ini if "[FreeTDS]" is not in file
  ansible.builtin.shell: |
    cat <<EOF >> ./odbcinst.ini
    [FreeTDS]
    Description=TDS driver (Sybase/MS SQL)
    Driver=libtdsodbc.so
    Setup=libtdsS.so
    CPTimeout=
    CPReuse=
    UsageCount=2
  when: _odbcinst_freetds.stdout.find('[FreeTDS]') == -1


- name: copy odbcinst.ini if exists
  ansible.builtin.shell:
    cmd: docker cp ./odbcinst.ini bill2myprint-app:/etc/odbcinst.ini
  when: _odbcinst_freetds.stdout.find('[FreeTDS]') == -1


#
#- name: Check /etc/odbcinst.ini exists
#  stat:
#    path: /etc/odbcinst.ini
#  register: _odbcinst_exists
#
#
#- name: Create /etc/odbcinst.ini, if it doesnt exist already
#  file:
#    path: /etc/odbcinst.ini
#    state: touch
#  when: not _odbcinst_exists.stat.exists
#
#
#- name: Insert FreeTDS config into /etc/odbcinst.ini
#  ansible.builtin.shell: |
#    docker exec -it bill2myprint-app sudo cat <<EOF >> /etc/odbcinst.ini
#    [FreeTDS]
#    Description=TDS driver (Sybase/MS SQL)
#    Driver=libtdsodbc.so
#    Setup=libtdsS.so
#    CPTimeout=
#    CPReuse=
#    UsageCount=2
#    EOF


#- name: Create bill directory in src/bill2myprint
#  ansible.builtin.shell: |
#    docker exec -it bill2myprint-app mkdir /app/src/bill2myprint/media &&
#    docker exec -it bill2myprint-app mkdir /app/src/bill2myprint/media/pdf &&
#    docker exec -it bill2myprint-app chown 1000:1000 /app/src/bill2myprint/media &&
#    docker exec -it bill2myprint-app chown 1000:1000 /app/src/bill2myprint/media/pdf
#  when: _bill_directory_exists.stdout == ""